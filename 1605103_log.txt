Line No:0 Token:LCURL Lexeme: {
Line No:1 Token:INT Lexeme: int
Line No:1 Token:COMMA Lexeme: ,
Line No:1 Token:FLOAT Lexeme: float
Line No:1 Token:COMMA Lexeme: ,
Line No:1 Token:DOUBLE Lexeme: double
Line No:1 Token:SEMICOLON Lexeme: ;
Line No:2 Token:FOR Lexeme: for
Line No:2 Token:WHILE Lexeme: while
Line No:3 Token:DO Lexeme: do
Line No:4 Token:RELOP Lexeme: >=
Line No:4 Token:ADDOP Lexeme: +
Line No:4 Token:INCOP Lexeme: ++
Line No:4 Token:INCOP Lexeme: --
Line No:4 Token:MULOP Lexeme: *
Line No:4 Token:MULOP Lexeme: %
Line No:4 Token:MULOP Lexeme: /
Line No:5 Token:SWITCH Lexeme: switch
Line No:6 Token:LTHIRD Lexeme: [
Line No:7 Token:RTHIRD Lexeme: ]
Line No:8 Token:LPAREN Lexeme: (
Line No:9 Token:RPAREN Lexeme: )
Line No:10 Token:RCURL Lexeme: }
