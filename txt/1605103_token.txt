<ID, func> <LPAREN, (> <ID, a> <RPAREN, )> <LCURL, {> <ID, a> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, a> <LTHIRD, [> <ID, func> <LPAREN, (> <ID, a> <RPAREN, )> <LCURL, {> <ID, a> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, a> <LTHIRD, [> <ID, func> <LPAREN, (> <ID, a> <RPAREN, )> <LCURL, {> <ID, a> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, a> <LTHIRD, [> <ID, x> <COMMA, ,> <ID, y> <COMMA, ,> <ID, z> <SEMICOLON, ;> <ID, a> <SEMICOLON, ;> <ID, foo> <LPAREN, (> <RPAREN, )> <SEMICOLON, ;> <ID, var> <LPAREN, (> <ID, a> <COMMA, ,> <ID, b> <RPAREN, )> <LCURL, {> <ID, a> <ADDOP, +> <ID, b> <SEMICOLON, ;> <RCURL, }> <ID, foo> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, x> <ASSIGNOP, => <CONST_INT, 2> <SEMICOLON, ;> <ID, y> <ASSIGNOP, => <ID, x> <ADDOP, -> <CONST_INT, 5> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, a> <LTHIRD, [> <ID, x> <COMMA, ,> <ID, y> <COMMA, ,> <ID, z> <SEMICOLON, ;> <ID, a> <SEMICOLON, ;> <ID, foo> <LPAREN, (> <RPAREN, )> <SEMICOLON, ;> <ID, var> <LPAREN, (> <ID, a> <COMMA, ,> <ID, b> <RPAREN, )> <LCURL, {> <ID, a> <ADDOP, +> <ID, b> <SEMICOLON, ;> <RCURL, }> <ID, foo> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, x> <ASSIGNOP, => <CONST_INT, 2> <SEMICOLON, ;> <ID, y> <ASSIGNOP, => <ID, x> <ADDOP, -> <CONST_INT, 5> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, a> <LTHIRD, [> 