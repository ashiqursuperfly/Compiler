Line:1 Token: ID Lexeme: func
Line:1 Token: LPAREN Lexeme: (
Line:1 Token: ID Lexeme: a
Line:1 Token: RPAREN Lexeme: )
Line:1 Token: LCURL Lexeme: {
Line:2 Token: ID Lexeme: a
Line:2 Token: SEMICOLON Lexeme: ;
Line:3 Token: RCURL Lexeme: }
Line:5 Token: ID Lexeme: main
Line:5 Token: LPAREN Lexeme: (
Line:5 Token: RPAREN Lexeme: )
Line:5 Token: LCURL Lexeme: {
Line:6 Token: ID Lexeme: a
Line:6 Token: LTHIRD Lexeme: [
Line:1 Token: ID Lexeme: x
Line:1 Token: COMMA Lexeme: ,
Line:1 Token: ID Lexeme: y
Line:1 Token: COMMA Lexeme: ,
Line:1 Token: ID Lexeme: z
Line:1 Token: SEMICOLON Lexeme: ;
Line:1 Token: ID Lexeme: a
Line:1 Token: SEMICOLON Lexeme: ;
Line:3 Token: ID Lexeme: foo
Line:3 Token: LPAREN Lexeme: (
Line:3 Token: RPAREN Lexeme: )
Line:3 Token: SEMICOLON Lexeme: ;
Line:5 Token: ID Lexeme: var
Line:5 Token: LPAREN Lexeme: (
Line:5 Token: ID Lexeme: a
Line:5 Token: COMMA Lexeme: ,
Line:5 Token: ID Lexeme: b
Line:5 Token: RPAREN Lexeme: )
Line:5 Token: LCURL Lexeme: {
Line:6 Token: ID Lexeme: a
Line:6 Token: ADDOP Lexeme: +
Line:6 Token: ID Lexeme: b
Line:6 Token: SEMICOLON Lexeme: ;
Line:7 Token: RCURL Lexeme: }
Line:9 Token: ID Lexeme: foo
Line:9 Token: LPAREN Lexeme: (
Line:9 Token: RPAREN Lexeme: )
Line:9 Token: LCURL Lexeme: {
Line:10 Token: ID Lexeme: x
Line:10 Token: ASSIGNOP Lexeme: =
Line:10 Token: CONST_INT Lexeme: 2
Line:10 Token: SEMICOLON Lexeme: ;
Line:11 Token: ID Lexeme: y
Line:11 Token: ASSIGNOP Lexeme: =
Line:11 Token: ID Lexeme: x
Line:11 Token: ADDOP Lexeme: -
Line:11 Token: CONST_INT Lexeme: 5
Line:11 Token: SEMICOLON Lexeme: ;
Line:12 Token: RCURL Lexeme: }
Line:14 Token: ID Lexeme: main
Line:14 Token: LPAREN Lexeme: (
Line:14 Token: RPAREN Lexeme: )
Line:14 Token: LCURL Lexeme: {
Line:15 Token: ID Lexeme: a
Line:15 Token: LTHIRD Lexeme: [
Line:1 Token: ID Lexeme: x
Line:1 Token: COMMA Lexeme: ,
Line:1 Token: ID Lexeme: y
Line:1 Token: COMMA Lexeme: ,
Line:1 Token: ID Lexeme: z
Line:1 Token: SEMICOLON Lexeme: ;
Line:1 Token: ID Lexeme: a
Line:1 Token: SEMICOLON Lexeme: ;
Line:3 Token: ID Lexeme: foo
Line:3 Token: LPAREN Lexeme: (
Line:3 Token: RPAREN Lexeme: )
Line:3 Token: SEMICOLON Lexeme: ;
Line:5 Token: ID Lexeme: var
Line:5 Token: LPAREN Lexeme: (
Line:5 Token: ID Lexeme: a
Line:5 Token: COMMA Lexeme: ,
Line:5 Token: ID Lexeme: b
Line:5 Token: RPAREN Lexeme: )
Line:5 Token: LCURL Lexeme: {
Line:6 Token: ID Lexeme: a
Line:6 Token: ADDOP Lexeme: +
Line:6 Token: ID Lexeme: b
Line:6 Token: SEMICOLON Lexeme: ;
Line:7 Token: RCURL Lexeme: }
Line:9 Token: ID Lexeme: foo
Line:9 Token: LPAREN Lexeme: (
Line:9 Token: RPAREN Lexeme: )
Line:9 Token: LCURL Lexeme: {
Line:10 Token: ID Lexeme: x
Line:10 Token: ASSIGNOP Lexeme: =
Line:10 Token: CONST_INT Lexeme: 2
Line:10 Token: SEMICOLON Lexeme: ;
Line:11 Token: ID Lexeme: y
Line:11 Token: ASSIGNOP Lexeme: =
Line:11 Token: ID Lexeme: x
Line:11 Token: ADDOP Lexeme: -
Line:11 Token: CONST_INT Lexeme: 5
Line:11 Token: SEMICOLON Lexeme: ;
Line:12 Token: RCURL Lexeme: }
Line:14 Token: ID Lexeme: main
Line:14 Token: LPAREN Lexeme: (
Line:14 Token: RPAREN Lexeme: )
Line:14 Token: LCURL Lexeme: {
Line:15 Token: ID Lexeme: a
Line:15 Token: LTHIRD Lexeme: [
