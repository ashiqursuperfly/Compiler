Line:1 Token: ID Lexeme: var

Line:1 Token: LPAREN Lexeme: (

Line:1 Token: ID Lexeme: a

Line:1 Token: COMMA Lexeme: ,

Line:1 Token: ID Lexeme: b

Line:1 Token: RPAREN Lexeme: )

Line:1 Token: LCURL Lexeme: {

Line:2 Token: ID Lexeme: a

Line:2 Token: ADDOP Lexeme: +

Line:2 Token: ID Lexeme: b

Line:2 Token: SEMICOLON Lexeme: ;

Line:3 Token: RCURL Lexeme: }

Line:5 Token: COMMENT Lexeme: // int fib(int n) 

Line:6 Token: COMMENT Lexeme: // { 

Line:7 Token: COMMENT Lexeme: //   int a, b, c, i;

Line:8 Token: COMMENT Lexeme: //   a=0;

Line:9 Token: COMMENT Lexeme: //   b=1; 

Line:10 Token: COMMENT Lexeme: //   if( n == 0) 

Line:11 Token: COMMENT Lexeme: //     return a; 

Line:12 Token: COMMENT Lexeme: //   for (i = 2; i <= n; i++) 

Line:13 Token: COMMENT Lexeme: //   { 

Line:14 Token: COMMENT Lexeme: //      c = a + b; 

Line:15 Token: COMMENT Lexeme: //      a = b; 

Line:16 Token: COMMENT Lexeme: //      b = c; 

Line:17 Token: COMMENT Lexeme: //   } 

Line:18 Token: COMMENT Lexeme: //   return b; 

Line:19 Token: COMMENT Lexeme: // } 

Line:21 Token: ID Lexeme: main

Line:21 Token: LPAREN Lexeme: (

Line:21 Token: RPAREN Lexeme: )

Line:21 Token: LCURL Lexeme: {

Line:23 Token: ID Lexeme: x

Line:23 Token: SEMICOLON Lexeme: ;

Line:23 Token: ID Lexeme: d

Line:23 Token: SEMICOLON Lexeme: ;

Line:24 Token: ID Lexeme: x

Line:24 Token: ASSIGNOP Lexeme: =

Line:24 Token: CONST_INT Lexeme: 3

Line:24 Token: SEMICOLON Lexeme: ;

Line:25 Token: ID Lexeme: a

Line:25 Token: LTHIRD Lexeme: [

Line:25 Token: CONST_INT Lexeme: 2

Line:25 Token: RTHIRD Lexeme: ]

Line:25 Token: COMMA Lexeme: ,

Line:25 Token: ID Lexeme: c

Line:25 Token: COMMA Lexeme: ,

Line:25 Token: ID Lexeme: i

Line:25 Token: COMMA Lexeme: ,

Line:25 Token: ID Lexeme: j

Line:25 Token: SEMICOLON Lexeme: ;

Line:26 Token: COMMENT Lexeme: //x = 2 * 3;

Line:27 Token: ID Lexeme: x

Line:27 Token: ASSIGNOP Lexeme: =

Line:27 Token: ID Lexeme: var

Line:27 Token: LPAREN Lexeme: (

Line:27 Token: CONST_INT Lexeme: 1

Line:27 Token: COMMA Lexeme: ,

Line:27 Token: ID Lexeme: x

Line:27 Token: RPAREN Lexeme: )

Line:27 Token: SEMICOLON Lexeme: ;

Line:28 Token: COMMENT Lexeme: //x = var(1,x); 

Line:29 Token: COMMENT Lexeme: //d=x+3*2;

Line:30 Token: CONST_INT Lexeme: 0

Line:30 Token: SEMICOLON Lexeme: ;

Line:31 Token: RCURL Lexeme: }

