Line:1 Token: ID Lexeme: x

Line:1 Token: COMMA Lexeme: ,

Line:1 Token: ID Lexeme: y

Line:1 Token: COMMA Lexeme: ,

Line:1 Token: ID Lexeme: z

Line:1 Token: SEMICOLON Lexeme: ;

Line:1 Token: ID Lexeme: a

Line:1 Token: SEMICOLON Lexeme: ;

Line:3 Token: ID Lexeme: foo

Line:3 Token: LPAREN Lexeme: (

Line:3 Token: RPAREN Lexeme: )

Line:3 Token: SEMICOLON Lexeme: ;

Line:5 Token: ID Lexeme: var

Line:5 Token: LPAREN Lexeme: (

Line:5 Token: ID Lexeme: a

Line:5 Token: COMMA Lexeme: ,

Line:5 Token: ID Lexeme: b

Line:5 Token: RPAREN Lexeme: )

Line:5 Token: LCURL Lexeme: {

Line:6 Token: ID Lexeme: a

Line:6 Token: ADDOP Lexeme: +

Line:6 Token: ID Lexeme: b

Line:6 Token: SEMICOLON Lexeme: ;

Line:7 Token: RCURL Lexeme: }

Line:9 Token: ID Lexeme: foo

Line:9 Token: LPAREN Lexeme: (

Line:9 Token: RPAREN Lexeme: )

Line:9 Token: LCURL Lexeme: {

Line:10 Token: ID Lexeme: x

Line:10 Token: ASSIGNOP Lexeme: =

Line:10 Token: CONST_INT Lexeme: 2

Line:10 Token: SEMICOLON Lexeme: ;

Line:11 Token: ID Lexeme: y

Line:11 Token: ASSIGNOP Lexeme: =

Line:11 Token: ID Lexeme: x

Line:11 Token: ADDOP Lexeme: -

Line:11 Token: CONST_INT Lexeme: 5

Line:11 Token: SEMICOLON Lexeme: ;

Line:12 Token: RCURL Lexeme: }

Line:14 Token: ID Lexeme: main

Line:14 Token: LPAREN Lexeme: (

Line:14 Token: RPAREN Lexeme: )

Line:14 Token: LCURL Lexeme: {

Line:15 Token: ID Lexeme: a

Line:15 Token: LTHIRD Lexeme: [

Line:15 Token: CONST_INT Lexeme: 2

Line:15 Token: RTHIRD Lexeme: ]

Line:15 Token: COMMA Lexeme: ,

Line:15 Token: ID Lexeme: c

Line:15 Token: COMMA Lexeme: ,

Line:15 Token: ID Lexeme: i

Line:15 Token: COMMA Lexeme: ,

Line:15 Token: ID Lexeme: j

Line:15 Token: SEMICOLON Lexeme: ;

Line:15 Token: ID Lexeme: d

Line:15 Token: SEMICOLON Lexeme: ;

Line:16 Token: ID Lexeme: a

Line:16 Token: LTHIRD Lexeme: [

Line:16 Token: CONST_INT Lexeme: 0

Line:16 Token: RTHIRD Lexeme: ]

Line:16 Token: ASSIGNOP Lexeme: =

Line:16 Token: CONST_INT Lexeme: 1

Line:16 Token: SEMICOLON Lexeme: ;

Line:17 Token: ID Lexeme: a

Line:17 Token: LTHIRD Lexeme: [

Line:17 Token: CONST_INT Lexeme: 1

Line:17 Token: RTHIRD Lexeme: ]

Line:17 Token: ASSIGNOP Lexeme: =

Line:17 Token: CONST_INT Lexeme: 5

Line:17 Token: SEMICOLON Lexeme: ;

Line:18 Token: ID Lexeme: i

Line:18 Token: ASSIGNOP Lexeme: =

Line:18 Token: ID Lexeme: a

Line:18 Token: LTHIRD Lexeme: [

Line:18 Token: CONST_INT Lexeme: 0

Line:18 Token: RTHIRD Lexeme: ]

Line:18 Token: ADDOP Lexeme: +

Line:18 Token: ID Lexeme: a

Line:18 Token: LTHIRD Lexeme: [

Line:18 Token: CONST_INT Lexeme: 1

Line:18 Token: RTHIRD Lexeme: ]

Line:18 Token: SEMICOLON Lexeme: ;

Line:19 Token: ID Lexeme: j

Line:19 Token: ASSIGNOP Lexeme: =

Line:19 Token: CONST_INT Lexeme: 2

Line:19 Token: MULOP Lexeme: *

Line:19 Token: CONST_INT Lexeme: 3

Line:19 Token: ADDOP Lexeme: +

Line:19 Token: LPAREN Lexeme: (

Line:19 Token: CONST_INT Lexeme: 5

Line:19 Token: MULOP Lexeme: %

Line:19 Token: CONST_INT Lexeme: 3

Line:19 Token: RELOP Lexeme: <

Line:19 Token: CONST_INT Lexeme: 4

Line:19 Token: LOGICOP Lexeme: &&

Line:19 Token: CONST_INT Lexeme: 8

Line:19 Token: RPAREN Lexeme: )

Line:19 Token: LOGICOP Lexeme: ||

Line:19 Token: CONST_INT Lexeme: 2

Line:19 Token: SEMICOLON Lexeme: ;

Line:20 Token: ID Lexeme: d

Line:20 Token: ASSIGNOP Lexeme: =

Line:20 Token: ID Lexeme: var

Line:20 Token: LPAREN Lexeme: (

Line:20 Token: CONST_INT Lexeme: 1

Line:20 Token: COMMA Lexeme: ,

Line:20 Token: CONST_INT Lexeme: 2

Line:20 Token: MULOP Lexeme: *

Line:20 Token: CONST_INT Lexeme: 3

Line:20 Token: RPAREN Lexeme: )

Line:20 Token: ADDOP Lexeme: +

Line:20 Token: CONST_FLOAT Lexeme: 3.5

Line:20 Token: MULOP Lexeme: *

Line:20 Token: CONST_INT Lexeme: 2

Line:20 Token: SEMICOLON Lexeme: ;

Line:21 Token: CONST_INT Lexeme: 0

Line:21 Token: SEMICOLON Lexeme: ;

Line:22 Token: RCURL Lexeme: }

