Line:1 Token: ID Lexeme: max

Line:1 Token: LPAREN Lexeme: (

Line:1 Token: ID Lexeme: a

Line:1 Token: COMMA Lexeme: ,

Line:1 Token: ID Lexeme: b

Line:1 Token: RPAREN Lexeme: )

Line:2 Token: LCURL Lexeme: {

Line:3 Token: LPAREN Lexeme: (

Line:3 Token: ID Lexeme: a

Line:3 Token: RELOP Lexeme: <

Line:3 Token: ID Lexeme: b

Line:3 Token: RPAREN Lexeme: )

Line:3 Token: ID Lexeme: b

Line:3 Token: SEMICOLON Lexeme: ;

Line:4 Token: ID Lexeme: a

Line:4 Token: SEMICOLON Lexeme: ;

Line:5 Token: RCURL Lexeme: }

Line:7 Token: ID Lexeme: main

Line:7 Token: LPAREN Lexeme: (

Line:7 Token: RPAREN Lexeme: )

Line:8 Token: LCURL Lexeme: {

Line:9 Token: ID Lexeme: a

Line:9 Token: COMMA Lexeme: ,

Line:9 Token: ID Lexeme: b

Line:9 Token: COMMA Lexeme: ,

Line:9 Token: ID Lexeme: c

Line:9 Token: COMMA Lexeme: ,

Line:9 Token: ID Lexeme: d

Line:9 Token: COMMA Lexeme: ,

Line:9 Token: ID Lexeme: e

Line:9 Token: COMMA Lexeme: ,

Line:9 Token: ID Lexeme: f

Line:9 Token: COMMA Lexeme: ,

Line:9 Token: ID Lexeme: i

Line:9 Token: SEMICOLON Lexeme: ;

Line:10 Token: ID Lexeme: a

Line:10 Token: ASSIGNOP Lexeme: =

Line:10 Token: CONST_INT Lexeme: 3

Line:10 Token: ADDOP Lexeme: +

Line:10 Token: CONST_INT Lexeme: 2

Line:10 Token: SEMICOLON Lexeme: ;

Line:11 Token: LPAREN Lexeme: (

Line:11 Token: ID Lexeme: a

Line:11 Token: RPAREN Lexeme: )

Line:11 Token: SEMICOLON Lexeme: ;

Line:12 Token: ID Lexeme: b

Line:12 Token: ASSIGNOP Lexeme: =

Line:12 Token: CONST_INT Lexeme: 2

Line:12 Token: ADDOP Lexeme: -

Line:12 Token: CONST_INT Lexeme: 5

Line:12 Token: MULOP Lexeme: *

Line:12 Token: ID Lexeme: a

Line:12 Token: ADDOP Lexeme: +

Line:12 Token: LPAREN Lexeme: (

Line:12 Token: CONST_INT Lexeme: 7

Line:12 Token: MULOP Lexeme: %

Line:12 Token: CONST_INT Lexeme: 3

Line:12 Token: RPAREN Lexeme: )

Line:12 Token: SEMICOLON Lexeme: ;

Line:13 Token: LPAREN Lexeme: (

Line:13 Token: ID Lexeme: b

Line:13 Token: RPAREN Lexeme: )

Line:13 Token: SEMICOLON Lexeme: ;

Line:14 Token: COMMENT Lexeme: //c = -b;

Line:15 Token: ID Lexeme: c

Line:15 Token: INCOP Lexeme: ++

Line:15 Token: SEMICOLON Lexeme: ;

Line:16 Token: LPAREN Lexeme: (

Line:16 Token: ID Lexeme: c

Line:16 Token: RPAREN Lexeme: )

Line:16 Token: SEMICOLON Lexeme: ;

Line:17 Token: ID Lexeme: b

Line:17 Token: DECOP Lexeme: --

Line:17 Token: SEMICOLON Lexeme: ;

Line:18 Token: LPAREN Lexeme: (

Line:18 Token: ID Lexeme: b

Line:18 Token: RPAREN Lexeme: )

Line:18 Token: SEMICOLON Lexeme: ;

Line:20 Token: LPAREN Lexeme: (

Line:20 Token: LPAREN Lexeme: (

Line:20 Token: ID Lexeme: b

Line:20 Token: RELOP Lexeme: >

Line:20 Token: ID Lexeme: a

Line:20 Token: RPAREN Lexeme: )

Line:20 Token: LOGICOP Lexeme: ||

Line:20 Token: LPAREN Lexeme: (

Line:20 Token: ID Lexeme: c

Line:20 Token: RELOP Lexeme: >

Line:20 Token: ID Lexeme: b

Line:20 Token: RPAREN Lexeme: )

Line:20 Token: RPAREN Lexeme: )

Line:21 Token: LCURL Lexeme: {

Line:22 Token: ID Lexeme: e

Line:22 Token: ASSIGNOP Lexeme: =

Line:22 Token: CONST_INT Lexeme: 1

Line:22 Token: ADDOP Lexeme: +

Line:22 Token: LPAREN Lexeme: (

Line:22 Token: CONST_INT Lexeme: 2

Line:22 Token: LOGICOP Lexeme: &&

Line:22 Token: CONST_INT Lexeme: 5

Line:22 Token: RPAREN Lexeme: )

Line:22 Token: SEMICOLON Lexeme: ;

Line:23 Token: LPAREN Lexeme: (

Line:23 Token: ID Lexeme: e

Line:23 Token: RPAREN Lexeme: )

Line:23 Token: SEMICOLON Lexeme: ;

Line:24 Token: RCURL Lexeme: }

Line:25 Token: ID Lexeme: f

Line:25 Token: ASSIGNOP Lexeme: =

Line:25 Token: CONST_INT Lexeme: 0

Line:25 Token: SEMICOLON Lexeme: ;

Line:26 Token: LPAREN Lexeme: (

Line:26 Token: ID Lexeme: i

Line:26 Token: ASSIGNOP Lexeme: =

Line:26 Token: CONST_INT Lexeme: 100

Line:26 Token: SEMICOLON Lexeme: ;

Line:26 Token: ID Lexeme: i

Line:26 Token: RELOP Lexeme: >=

Line:26 Token: CONST_INT Lexeme: 1

Line:26 Token: SEMICOLON Lexeme: ;

Line:26 Token: ID Lexeme: i

Line:26 Token: DECOP Lexeme: --

Line:26 Token: RPAREN Lexeme: )

Line:27 Token: LCURL Lexeme: {

Line:28 Token: ID Lexeme: f

Line:28 Token: INCOP Lexeme: ++

Line:28 Token: SEMICOLON Lexeme: ;

Line:29 Token: RCURL Lexeme: }

Line:30 Token: LPAREN Lexeme: (

Line:30 Token: ID Lexeme: f

Line:30 Token: RPAREN Lexeme: )

Line:30 Token: SEMICOLON Lexeme: ;

Line:32 Token: ID Lexeme: f

Line:32 Token: ASSIGNOP Lexeme: =

Line:32 Token: CONST_INT Lexeme: 0

Line:32 Token: SEMICOLON Lexeme: ;

Line:33 Token: LPAREN Lexeme: (

Line:33 Token: ID Lexeme: i

Line:33 Token: RELOP Lexeme: >

Line:33 Token: CONST_INT Lexeme: 40

Line:33 Token: RPAREN Lexeme: )

Line:34 Token: LCURL Lexeme: {

Line:35 Token: ID Lexeme: f

Line:35 Token: DECOP Lexeme: --

Line:35 Token: SEMICOLON Lexeme: ;

Line:36 Token: ID Lexeme: i

Line:36 Token: DECOP Lexeme: --

Line:36 Token: SEMICOLON Lexeme: ;

Line:37 Token: RCURL Lexeme: }

Line:38 Token: LPAREN Lexeme: (

Line:38 Token: ID Lexeme: f

Line:38 Token: RPAREN Lexeme: )

Line:38 Token: SEMICOLON Lexeme: ;

Line:40 Token: ID Lexeme: f

Line:40 Token: ASSIGNOP Lexeme: =

Line:40 Token: ID Lexeme: max

Line:40 Token: LPAREN Lexeme: (

Line:40 Token: CONST_INT Lexeme: 10

Line:40 Token: COMMA Lexeme: ,

Line:40 Token: CONST_INT Lexeme: 4

Line:40 Token: RPAREN Lexeme: )

Line:40 Token: SEMICOLON Lexeme: ;

Line:41 Token: LPAREN Lexeme: (

Line:41 Token: ID Lexeme: f

Line:41 Token: RPAREN Lexeme: )

Line:41 Token: SEMICOLON Lexeme: ;

Line:42 Token: RCURL Lexeme: }

