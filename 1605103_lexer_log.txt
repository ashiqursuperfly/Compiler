Line:2 Token: ID Lexeme: var

Line:2 Token: LPAREN Lexeme: (

Line:2 Token: ID Lexeme: a

Line:2 Token: COMMA Lexeme: ,

Line:2 Token: ID Lexeme: b

Line:2 Token: RPAREN Lexeme: )

Line:2 Token: LCURL Lexeme: {

Line:3 Token: ID Lexeme: a

Line:3 Token: ADDOP Lexeme: +

Line:3 Token: ID Lexeme: b

Line:3 Token: SEMICOLON Lexeme: ;

Line:4 Token: RCURL Lexeme: }

Line:6 Token: ID Lexeme: fib

Line:6 Token: LPAREN Lexeme: (

Line:6 Token: ID Lexeme: n

Line:6 Token: RPAREN Lexeme: )

Line:7 Token: LCURL Lexeme: {

Line:8 Token: ID Lexeme: a

Line:8 Token: COMMA Lexeme: ,

Line:8 Token: ID Lexeme: b

Line:8 Token: COMMA Lexeme: ,

Line:8 Token: ID Lexeme: c

Line:8 Token: COMMA Lexeme: ,

Line:8 Token: ID Lexeme: i

Line:8 Token: SEMICOLON Lexeme: ;

Line:9 Token: ID Lexeme: a

Line:9 Token: ASSIGNOP Lexeme: =

Line:9 Token: CONST_INT Lexeme: 0

Line:9 Token: SEMICOLON Lexeme: ;

Line:10 Token: ID Lexeme: b

Line:10 Token: ASSIGNOP Lexeme: =

Line:10 Token: CONST_INT Lexeme: 1

Line:10 Token: SEMICOLON Lexeme: ;

Line:11 Token: LPAREN Lexeme: (

Line:11 Token: ID Lexeme: n

Line:11 Token: RELOP Lexeme: ==

Line:11 Token: CONST_INT Lexeme: 0

Line:11 Token: RPAREN Lexeme: )

Line:12 Token: ID Lexeme: a

Line:12 Token: SEMICOLON Lexeme: ;

Line:13 Token: LPAREN Lexeme: (

Line:13 Token: ID Lexeme: i

Line:13 Token: ASSIGNOP Lexeme: =

Line:13 Token: CONST_INT Lexeme: 2

Line:13 Token: SEMICOLON Lexeme: ;

Line:13 Token: ID Lexeme: i

Line:13 Token: RELOP Lexeme: <=

Line:13 Token: ID Lexeme: n

Line:13 Token: SEMICOLON Lexeme: ;

Line:13 Token: ID Lexeme: i

Line:13 Token: INCOP Lexeme: ++

Line:13 Token: RPAREN Lexeme: )

Line:14 Token: LCURL Lexeme: {

Line:15 Token: ID Lexeme: c

Line:15 Token: ASSIGNOP Lexeme: =

Line:15 Token: ID Lexeme: a

Line:15 Token: ADDOP Lexeme: +

Line:15 Token: ID Lexeme: b

Line:15 Token: SEMICOLON Lexeme: ;

Line:16 Token: ID Lexeme: a

Line:16 Token: ASSIGNOP Lexeme: =

Line:16 Token: ID Lexeme: b

Line:16 Token: SEMICOLON Lexeme: ;

Line:17 Token: ID Lexeme: b

Line:17 Token: ASSIGNOP Lexeme: =

Line:17 Token: ID Lexeme: c

Line:17 Token: SEMICOLON Lexeme: ;

Line:18 Token: RCURL Lexeme: }

Line:19 Token: ID Lexeme: b

Line:19 Token: SEMICOLON Lexeme: ;

Line:20 Token: RCURL Lexeme: }

Line:22 Token: ID Lexeme: main

Line:22 Token: LPAREN Lexeme: (

Line:22 Token: RPAREN Lexeme: )

Line:22 Token: LCURL Lexeme: {

Line:25 Token: ID Lexeme: x

Line:25 Token: SEMICOLON Lexeme: ;

Line:26 Token: ID Lexeme: x

Line:26 Token: INCOP Lexeme: ++

Line:26 Token: SEMICOLON Lexeme: ;

Line:28 Token: ID Lexeme: a

Line:28 Token: LTHIRD Lexeme: [

Line:28 Token: CONST_INT Lexeme: 2

Line:28 Token: RTHIRD Lexeme: ]

Line:28 Token: COMMA Lexeme: ,

Line:28 Token: ID Lexeme: c

Line:28 Token: COMMA Lexeme: ,

Line:28 Token: ID Lexeme: i

Line:28 Token: COMMA Lexeme: ,

Line:28 Token: ID Lexeme: j

Line:28 Token: SEMICOLON Lexeme: ;

Line:28 Token: ID Lexeme: d

Line:28 Token: SEMICOLON Lexeme: ;

Line:29 Token: ID Lexeme: a

Line:29 Token: LTHIRD Lexeme: [

Line:29 Token: CONST_INT Lexeme: 0

Line:29 Token: RTHIRD Lexeme: ]

Line:29 Token: ASSIGNOP Lexeme: =

Line:29 Token: CONST_INT Lexeme: 1

Line:29 Token: SEMICOLON Lexeme: ;

Line:30 Token: ID Lexeme: a

Line:30 Token: LTHIRD Lexeme: [

Line:30 Token: CONST_INT Lexeme: 1

Line:30 Token: RTHIRD Lexeme: ]

Line:30 Token: ASSIGNOP Lexeme: =

Line:30 Token: CONST_INT Lexeme: 5

Line:30 Token: SEMICOLON Lexeme: ;

Line:31 Token: ID Lexeme: i

Line:31 Token: ASSIGNOP Lexeme: =

Line:31 Token: ID Lexeme: a

Line:31 Token: LTHIRD Lexeme: [

Line:31 Token: CONST_INT Lexeme: 0

Line:31 Token: RTHIRD Lexeme: ]

Line:31 Token: ADDOP Lexeme: +

Line:31 Token: ID Lexeme: a

Line:31 Token: LTHIRD Lexeme: [

Line:31 Token: CONST_INT Lexeme: 1

Line:31 Token: RTHIRD Lexeme: ]

Line:31 Token: SEMICOLON Lexeme: ;

Line:32 Token: ID Lexeme: j

Line:32 Token: ASSIGNOP Lexeme: =

Line:32 Token: CONST_INT Lexeme: 2

Line:32 Token: MULOP Lexeme: *

Line:32 Token: CONST_INT Lexeme: 3

Line:32 Token: ADDOP Lexeme: +

Line:32 Token: LPAREN Lexeme: (

Line:32 Token: CONST_INT Lexeme: 5

Line:32 Token: MULOP Lexeme: %

Line:32 Token: CONST_INT Lexeme: 3

Line:32 Token: RELOP Lexeme: <

Line:32 Token: CONST_INT Lexeme: 4

Line:32 Token: LOGICOP Lexeme: &&

Line:32 Token: CONST_INT Lexeme: 8

Line:32 Token: RPAREN Lexeme: )

Line:32 Token: LOGICOP Lexeme: ||

Line:32 Token: CONST_INT Lexeme: 2

Line:32 Token: SEMICOLON Lexeme: ;

Line:33 Token: ID Lexeme: d

Line:33 Token: ASSIGNOP Lexeme: =

Line:33 Token: ID Lexeme: var

Line:33 Token: LPAREN Lexeme: (

Line:33 Token: CONST_INT Lexeme: 1

Line:33 Token: COMMA Lexeme: ,

Line:33 Token: CONST_INT Lexeme: 2

Line:33 Token: MULOP Lexeme: *

Line:33 Token: CONST_INT Lexeme: 3

Line:33 Token: RPAREN Lexeme: )

Line:33 Token: ADDOP Lexeme: +

Line:33 Token: CONST_FLOAT Lexeme: 3.5

Line:33 Token: MULOP Lexeme: *

Line:33 Token: CONST_INT Lexeme: 2

Line:33 Token: SEMICOLON Lexeme: ;

Line:34 Token: CONST_INT Lexeme: 0

Line:34 Token: SEMICOLON Lexeme: ;

Line:35 Token: RCURL Lexeme: }

