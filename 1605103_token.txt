<ID, max> <LPAREN, (> <ID, a> <COMMA, ,> <ID, b> <RPAREN, )> <LCURL, {> <LPAREN, (> <ID, a> <RELOP, <> <ID, b> <RPAREN, )> <ID, b> <SEMICOLON, ;> <ID, a> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, a> <COMMA, ,> <ID, b> <COMMA, ,> <ID, c> <COMMA, ,> <ID, d> <COMMA, ,> <ID, e> <COMMA, ,> <ID, f> <COMMA, ,> <ID, i> <SEMICOLON, ;> <ID, a> <ASSIGNOP, => <CONST_INT, 3> <ADDOP, +> <CONST_INT, 2> <SEMICOLON, ;> <LPAREN, (> <ID, a> <RPAREN, )> <SEMICOLON, ;> <ID, b> <ASSIGNOP, => <CONST_INT, 2> <ADDOP, -> <CONST_INT, 5> <MULOP, *> <ID, a> <ADDOP, +> <LPAREN, (> <CONST_INT, 7> <MULOP, %> <CONST_INT, 3> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <ID, b> <RPAREN, )> <SEMICOLON, ;> <ID, c> <INCOP, ++> <SEMICOLON, ;> <LPAREN, (> <ID, c> <RPAREN, )> <SEMICOLON, ;> <ID, b> <DECOP, --> <SEMICOLON, ;> <LPAREN, (> <ID, b> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <LPAREN, (> <ID, b> <RELOP, >> <ID, a> <RPAREN, )> <LOGICOP, ||> <LPAREN, (> <ID, c> <RELOP, >> <ID, b> <RPAREN, )> <RPAREN, )> <LCURL, {> <ID, e> <ASSIGNOP, => <CONST_INT, 1> <ADDOP, +> <LPAREN, (> <CONST_INT, 2> <LOGICOP, &&> <CONST_INT, 5> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <ID, e> <RPAREN, )> <SEMICOLON, ;> <RCURL, }> <ID, f> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <LPAREN, (> <ID, i> <ASSIGNOP, => <CONST_INT, 100> <SEMICOLON, ;> <ID, i> <RELOP, >=> <CONST_INT, 1> <SEMICOLON, ;> <ID, i> <DECOP, --> <RPAREN, )> <LCURL, {> <ID, f> <INCOP, ++> <SEMICOLON, ;> <RCURL, }> <LPAREN, (> <ID, f> <RPAREN, )> <SEMICOLON, ;> <ID, f> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <LPAREN, (> <ID, i> <RELOP, >> <CONST_INT, 40> <RPAREN, )> <LCURL, {> <ID, f> <DECOP, --> <SEMICOLON, ;> <ID, i> <DECOP, --> <SEMICOLON, ;> <RCURL, }> <LPAREN, (> <ID, f> <RPAREN, )> <SEMICOLON, ;> <ID, f> <ASSIGNOP, => <ID, max> <LPAREN, (> <CONST_INT, 10> <COMMA, ,> <CONST_INT, 4> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <ID, f> <RPAREN, )> <SEMICOLON, ;> <RCURL, }> 