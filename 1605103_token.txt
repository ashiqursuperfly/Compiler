<ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, x> <SEMICOLON, ;> <ID, d> <SEMICOLON, ;> <ID, i> <SEMICOLON, ;> <ID, x> <ASSIGNOP, => <CONST_INT, 312> <SEMICOLON, ;> <ID, d> <ASSIGNOP, => <CONST_INT, 432> <SEMICOLON, ;> <LPAREN, (> <ID, x> <RELOP, <> <ID, d> <RPAREN, )> <LCURL, {> <LPAREN, (> <ID, d> <RPAREN, )> <SEMICOLON, ;> <RCURL, }> <LCURL, {> <ID, zero> <SEMICOLON, ;> <ID, zero> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <LPAREN, (> <ID, zero> <RPAREN, )> <SEMICOLON, ;> <RCURL, }> <ID, x> <ASSIGNOP, => <CONST_INT, 1> <SEMICOLON, ;> <LPAREN, (> <ID, i> <ASSIGNOP, => <ID, x> <SEMICOLON, ;> <ID, i> <RELOP, <> <CONST_INT, 15> <SEMICOLON, ;> <ID, i> <INCOP, ++> <RPAREN, )> <LCURL, {> <LPAREN, (> <ID, i> <RPAREN, )> <SEMICOLON, ;> <RCURL, }> <LPAREN, (> <ID, i> <RELOP, >> <CONST_INT, 0> <RPAREN, )> <LCURL, {> <LPAREN, (> <ID, i> <RPAREN, )> <SEMICOLON, ;> <ID, i> <DECOP, --> <SEMICOLON, ;> <RCURL, }> <CONST_INT, 0> <SEMICOLON, ;> <RCURL, }> <ID, fact> <LPAREN, (> <ID, n> <RPAREN, )> <LCURL, {> <ID, f> <COMMA, ,> <ID, i> <SEMICOLON, ;> <ID, f> <ASSIGNOP, => <CONST_INT, 1> <SEMICOLON, ;> <LPAREN, (> <ID, i> <ASSIGNOP, => <ID, n> <SEMICOLON, ;> <ID, i> <RELOP, >> <CONST_INT, 0> <SEMICOLON, ;> <ID, i> <DECOP, --> <RPAREN, )> <LCURL, {> <ID, f> <ASSIGNOP, => <ID, f> <MULOP, *> <ID, i> <SEMICOLON, ;> <RCURL, }> <ID, f> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, n> <COMMA, ,> <ID, f> <SEMICOLON, ;> <ID, n> <ASSIGNOP, => <CONST_INT, 6> <SEMICOLON, ;> <ID, f> <ASSIGNOP, => <ID, fact> <LPAREN, (> <ID, n> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <ID, f> <RPAREN, )> <SEMICOLON, ;> <CONST_INT, 0> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, a> <LTHIRD, [> <CONST_INT, 20> <RTHIRD, ]> <SEMICOLON, ;> <ID, i> <COMMA, ,> <ID, val> <SEMICOLON, ;> <LPAREN, (> <ID, i> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <ID, i> <RELOP, <> <CONST_INT, 15> <SEMICOLON, ;> <ID, i> <INCOP, ++> <RPAREN, )> <LCURL, {> <ID, a> <LTHIRD, [> <ID, i> <RTHIRD, ]> <ASSIGNOP, => <ID, i> <ADDOP, +> <CONST_INT, 1> <SEMICOLON, ;> <RCURL, }> <LPAREN, (> <ID, i> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <ID, i> <RELOP, <> <CONST_INT, 15> <SEMICOLON, ;> <ID, i> <INCOP, ++> <RPAREN, )> <LCURL, {> <ID, val> <ASSIGNOP, => <ID, a> <LTHIRD, [> <ID, i> <RTHIRD, ]> <SEMICOLON, ;> <LPAREN, (> <ID, val> <RPAREN, )> <SEMICOLON, ;> <RCURL, }> <CONST_INT, 0> <SEMICOLON, ;> <RCURL, }> <ID, f> <LPAREN, (> <ID, a> <RPAREN, )> <LCURL, {> <CONST_INT, 2> <MULOP, *> <ID, a> <SEMICOLON, ;> <ID, a> <ASSIGNOP, => <CONST_INT, 9> <SEMICOLON, ;> <RCURL, }> <ID, g> <LPAREN, (> <ID, a> <COMMA, ,> <ID, b> <RPAREN, )> <LCURL, {> <ID, x> <SEMICOLON, ;> <ID, x> <ASSIGNOP, => <ID, f> <LPAREN, (> <ID, a> <RPAREN, )> <ADDOP, +> <ID, a> <ADDOP, +> <ID, b> <SEMICOLON, ;> <ID, x> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, a> <COMMA, ,> <ID, b> <SEMICOLON, ;> <ID, a> <ASSIGNOP, => <CONST_INT, 1> <SEMICOLON, ;> <ID, b> <ASSIGNOP, => <CONST_INT, 2> <SEMICOLON, ;> <ID, a> <ASSIGNOP, => <ID, g> <LPAREN, (> <ID, a> <COMMA, ,> <ID, b> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <ID, a> <RPAREN, )> <SEMICOLON, ;> <CONST_INT, 0> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, a> <COMMA, ,> <ID, b> <COMMA, ,> <ID, c> <LTHIRD, [> <CONST_INT, 3> <RTHIRD, ]> <SEMICOLON, ;> <ID, a> <ASSIGNOP, => <CONST_INT, 1> <MULOP, *> <LPAREN, (> <CONST_INT, 2> <ADDOP, +> <CONST_INT, 3> <RPAREN, )> <MULOP, %> <CONST_INT, 3> <SEMICOLON, ;> <ID, b> <ASSIGNOP, => <CONST_INT, 1> <RELOP, <> <CONST_INT, 5> <SEMICOLON, ;> <ID, c> <LTHIRD, [> <CONST_INT, 0> <RTHIRD, ]> <ASSIGNOP, => <CONST_INT, 2> <SEMICOLON, ;> <LPAREN, (> <ID, a> <LOGICOP, &&> <ID, b> <RPAREN, )> <ID, c> <LTHIRD, [> <CONST_INT, 0> <RTHIRD, ]> <INCOP, ++> <SEMICOLON, ;> <ID, c> <LTHIRD, [> <CONST_INT, 1> <RTHIRD, ]> <ASSIGNOP, => <ID, c> <LTHIRD, [> <CONST_INT, 0> <RTHIRD, ]> <SEMICOLON, ;> <LPAREN, (> <ID, a> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <ID, b> <RPAREN, )> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, a> <COMMA, ,> <ID, b> <COMMA, ,> <ID, i> <COMMA, ,> <ID, c> <SEMICOLON, ;> <ID, b> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <ID, c> <ASSIGNOP, => <CONST_INT, 1> <SEMICOLON, ;> <LPAREN, (> <ID, i> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <ID, i> <RELOP, <> <CONST_INT, 4> <SEMICOLON, ;> <ID, i> <INCOP, ++> <RPAREN, )> <LCURL, {> <ID, a> <ASSIGNOP, => <CONST_INT, 3> <SEMICOLON, ;> <LPAREN, (> <ID, a> <DECOP, --> <RPAREN, )> <LCURL, {> <ID, b> <INCOP, ++> <SEMICOLON, ;> <RCURL, }> <RCURL, }> <LPAREN, (> <ID, a> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <ID, b> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <ID, c> <RPAREN, )> <SEMICOLON, ;> <RCURL, }> 